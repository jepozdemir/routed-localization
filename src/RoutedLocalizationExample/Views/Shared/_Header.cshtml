@using RoutedLocalizationExample.Helpers
@helper languageSwitch() {
    string currentLanguage = "en"; ;
    if (ViewContext.RouteData.Values["lang"] != null)
    {
        currentLanguage = ViewContext.RouteData.Values["lang"].ToString();
    }

    var languages = LocalizationHelper.GetSupportedCultures();

    var targetPath = string.Format("{0}/{1}{2}",
        ViewContext.RouteData.Values["controller"].ToString(),
        ViewContext.RouteData.Values["action"].ToString(),
        Request.Url.Query);
    var host = string.Format("{0}://{1}", Request.Url.Scheme, Request.Url.Authority);
    var targetUrl = string.Format("{0}/{{0}}/{1}", host, targetPath);

    <li class="dropdown special" style="margin-left: 15px;">
        <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
            @(currentLanguage)
            <span class="caret"></span>
        </a>
        <ul class="dropdown-menu lang-selector">
            @foreach (var lang in languages)
            {
                <li><a href="@(string.Format(targetUrl, lang))">@lang</a></li>
            }
        </ul>
    </li>
}

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("Application name", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav navbar-left">
                <li>@Html.ActionLink("Home", "Index", "Home")</li>
            </ul>
            <ul class="nav navbar-nav navbar-right" style="margin-right: -5px;">
                @languageSwitch()
            </ul>
        </div>        
    </div>
</div>